# -------------------------------------------------------- #
# Utilidades generales.
#
# @package   hapy-shell.
# @subPacage Tools.
# @autor     jorge.mendez.ortega@gmail.com
# -------------------------------------------------------- #

# -------------------------------------------------------- #
# Permite el manejo de mensajes por tipo y color.
# 
# INFO
#
# all : Muestra todas las variantes de colores
# -t  : Muestra un titulo indicado
# default : Muestra el texto con la posibilidad de perzonalizar
# 
# USO 
#
# title [modificador] [color del texto] [mensaje] [fondo]
#
# EJEMPLOS
#
# title all
# title -t 143 "Este es mi titulo" 5
# title 143 "Este es mi mensaje" 5
# -------------------------------------------------------- #
title(){
    action=$1
    color=$2
    msg=$3
    bkcolor=$4    
    case $action in
        all)
            for numero in {0..255}
            do
                title -t $numero "Valor Font $numero"
                title -t 0 "Valor Back $numero" $numero
            done
        ;;
        -t)
            echo
            if [[ $# -ne 4 ]] 
            then
                echo "$(tput setaf 255; tput bold)# -------------- $(tput setaf $color)$msg$(tput setaf 255) -------------- #$(tput sgr0)"
            else
                echo "$(tput setab $bkcolor)$(tput setaf 255; tput bold)# -------------- $(tput setaf $color)$msg$(tput setaf 255) -------------- #$(tput sgr0)"
            fi
            echo
        ;;
        *)
            color=$1
            msg=$2
            bkcolor=$3
            if [[ $# -ne 3 ]] 
            then
                echo "$(tput setaf $color; tput bold)${msg}$(tput sgr0)"
            else
                echo "$(tput setab $bkcolor; tput bold) $(tput setaf $color)$msg$(tput sgr0)"
            fi
        ;;
    esac
}
## title

# -------------------------------------------------------- #
# Manejo de logs en consola.
# 
# INFO
# 
# -i: Texto de tipo informativo(valor por defecto)
# -e : Texto de tipo error
# -s : Texto de tipo success
# -w : Texto tipo alerta.
# 
# USO 
# 
# logs [modificador] [mensaje]
# 
# EJEMPLO
# 
# logs -i "Esto es un informe"
# -------------------------------------------------------- #
logs(){
    type=$1
    msg=$2
    textColor=255
    backGround=17
    case $type in
        -i)
            msgOut="[ ℹ️ INFO     ] => ${msg}"
            backGround=17
        ;;
        -e)
            msgOut="[ ❌ ERROR    ] => ${msg}"
            backGround=52
        ;;
        -s)
            msgOut="[ 🙌 SUCCESS  ] => ${msg}"
            backGround=22
        ;;
        -w)
            msgOut="[ ⚠️ WARNING  ] => ${msg}"
            backGround=11
            textColor=16
        ;;
        -m)
            msgOut="[ 🔖 MARK     ] => ${msg}"
            backGround=89
        ;;
        -c)
            msgOut="[ 💻 COMMAND     ] => ${msg}"
            backGround=29
        ;;
        *)
            msg=$1
            msgOut="[ ℹ️ INFO     ] => ${msg}"
            backGround=17
        ;;
    esac

    longitud=${#msgOut}
    c=""
    for ((i=$longitud; i <= 120; i++))
    do
        c="${c} "
    done
    
    title ${textColor} "${msgOut}${c}" ${backGround}
}
## logs

# -------------------------------------------------------- #
# Valida la existencia de un archivo.
# 
# INFO
# 
# -d: Indica que se validara la existencia de un directorio
# -f : Indica que se validara la existencia de un archivo
# 
# USO 
# 
# exists [modificador] [path]
# 
# EJEMPLO
# 
# exists -f  ./logs
# -------------------------------------------------------- #
exists(){
   opt=$1
   ruta=$2
   case $opt in
       -d)
           if [ ! -d $ruta ]
           then
               logs -e "El directorio '${ruta}' no existe"
               return 0
           fi
       ;;
       -f)
           if [ ! -f $ruta ]
           then
               logs -e "El archivo '${ruta}' no existe"
               return 0
           fi
       ;;
       *)
           logs -e "Indique el directorio o archivo para validar su existencia.."
       ;;
   esac
}
# exists

# -------------------------------------------------------- #
# Permite el manejo de directorios
# 
# INFO
# 
# -c : Permite crear un directorio con los permisos 777 y se 
#      posiciona en el directorio.
# -cp : Permite copiar un directorio.
# -d : Elimina un directorio y todo su contenido
# -r : Renombra un directorio.
# -s : Crea un Servidor estatico y espone el directorio en el que estemos.
# 
# USO 
# 
# dir [modificador] [nombre del directrio o puerto]
# 
# EJEMPLO
# 
# dir -c CreoUnDirectorio
# dir -d BorrarUnDirectorio
# dir -s 8080
# -------------------------------------------------------- #
dir() {
   action=$1
   directory=$2
   cdirectory=$3
   case $action in
       -c)
           logs -i "Creando el directorio ${directory}"
           if [ ! -d "${directory}" ]
           then
               mkdir $directory
               chmod -R 750 $directory
               cd $directory
               logs -c "mkdir $directory"
               logs -c "chmod -R 750 $directory"
               logs -c "cd $directory"
               logs -s "Directorio creado"
           else
               logs -e "El directorio ${directory} ya existe"
           fi 
       ;;
       -cp)
           logs -i "Copiando el directorio ${directory} a ${cdirectory}"
           if [  -d "${directory}" ]
           then
               cp -r $directory $cdirectory
               cd $cdirectory
               logs -c "cp -r $directory $cdirectory"
               logs -c "cd $cdirectory"
               logs -s "Directorio copiado"
           else
               logs -e "El directorio ${directory} no existe"
           fi 
       ;;
       -d)
           logs -i "Borrando el directorio ${directory}"
           if [ -d $directory ]
           then
               rm -rf $directory
               logs -c "rm -rf $directory"
               logs -s "Directorio eliminado"
           else
               logs -e "El directorio ${directory} no existe"
           fi
       ;;
       -r)
           logs -i "Renombrando directorio ${directory} a {cdirectory}"
           if [ -d $directory ]
           then
               mv $directory $cdirectory
               logs -c "mv $directory $cdirectory"
               logs -s "Directorio renombrando"
           else
               logs -e "El directorio ${directory} no existe"
           fi
       ;;
       -s)
           if [ $directory ]
           then
             local port="$directory"
           else
             local port="8000"
           fi
           logs -s "Levantando servidor en el puerto ${port}"
           logs -c "open \"http://localhost:$port\" && python -m SimpleHTTPServer \"$port\""
           open "http://localhost:$port" && python -m SimpleHTTPServer "$port"
       ;;
       *)
           logs -e "Proporcione una opción valida"
       ;;
   esac
}
#dir